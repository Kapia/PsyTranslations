<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PsyTranslations</title>
  <subtitle></subtitle>
  <link href="https://www.psytranslations.com//feed.xml" rel="self"/>
  <link href="https://www.psytranslations.com//"/>
  <updated>2021-03-28T00:00:00Z</updated>
  <id>https://www.psytranslations.com/</id>
  <author>
    <name>Enrique Quirós</name>
  </author>
  
    
    <entry>
      <title>Simple blog post</title>
      <link href="https://www.psytranslations.com//blog/simple-blog-post/"/>
      <updated>2020-01-25T00:00:00Z</updated>
      <id>https://www.psytranslations.com//blog/simple-blog-post/</id>
      <content type="html">
        <![CDATA[
      <p>This is a sample blog post to demonstrate how posts look with the Native Elements. All the content of this article is inside a Markdown file. <a href="https://www.11ty.dev/" title="Eleventy, a simpler static site generator">Eleventy</a> transforms that file into an HTML page.</p>
<p>This starter uses <a href="https://native-elements.stackblitz.io">Native Elements</a> CSS to add a basic style to native HTML elements without any extra framework. You can customize it by setting their global custom properties inside the <code>:root</code> CSS selector.</p>
<p>For example, this is a <code>blockquote</code> with a basic style:</p>
<blockquote>
<p>Less is more. Isn't it?
<cite>by Someone</cite></p>
</blockquote>
<p>Bullet list with some typography elements:</p>
<ul>
<li>Sed posuere consectetur est at lobortis</li>
<li>Aenean lacinia <del>bibendum</del> <ins>nulla</ins> sed consectetur</li>
<li>Sed posuere consectetur <s>est at lobortis</s></li>
<li>Lorem ipsum dolor <mark>sit amet</mark> consectetur</li>
<li>Press <kbd>⌥</kbd> <strong>+</strong> <kbd>↩</kbd></li>
</ul>
<hr>
<h2>Code highlights</h2>
<p>XITY provides code highlighting using <a href="https://prismjs.com/">Prism</a>. By default it uses the <a href="https://github.com/PrismJS/prism-themes/tree/master/themes">Material Theme Lighter</a> as a color scheme. If you want to change the theme, put the <code>css</code> file inside the <code>assets/css</code> folder and set the name inside <code>xity.config.js</code>.</p>
<pre class="language-jsx"><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><br>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fragment</span></span><span class="token punctuation">></span></span><span class="token plain-text"><br>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Hello </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text"><br>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fragment</span></span><span class="token punctuation">></span></span><br><span class="token punctuation">)</span></code></pre>
<p>... and here are some CSS code with a line highlight:</p>
<pre class="language-css"><code class="language-css"><span class="highlight-line"><span class="token selector">:root</span> <span class="token punctuation">{</span></span><br>  <span class="token property">--background-color</span><span class="token punctuation">:</span> white<span class="token selector">;<br><span class="highlight-line"></span><br>  .MyComponent</span> <span class="token punctuation">{</span><br><mark class="highlight-line highlight-line-active">    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--background-color<span class="token punctuation">)</span><span class="token punctuation">;</span></mark><br><span class="highlight-line">  <span class="token punctuation">}</span></span><br><span class="highlight-line"><span class="token punctuation">}</span></span></code></pre>

    ]]>
      </content>
    </entry>
  
    
    <entry>
      <title>A post with embeds and images</title>
      <link href="https://www.psytranslations.com//blog/post-with-embeds-and-images/"/>
      <updated>2020-01-26T00:00:00Z</updated>
      <id>https://www.psytranslations.com//blog/post-with-embeds-and-images/</id>
      <content type="html">
        <![CDATA[
      <p>This post contains <code>iframe</code> embedded elements, wrapped inside of a CSS class. That allows you to add custom styles to match the visual look of embeds better for your needs. You can customize the CSS class name by adjusting <code>iframesClass</code> from the <code>xity.config.js</code> file. Here is an example of a CodePen embed.</p>
<iframe height="500" style="width: 100%;" scrolling="no" title="Border Radius Morphing" src="https://codepen.io/equinusocio/embed/jezBdZ?height=300&theme-id=10535&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true"></iframe>
<h2>Images and pictures</h2>
<p>This starter uses a custom transformer to parse <code>markdown</code> content and improve it. An example of this are the images. If you add an image with title to your markdown, it will be replaced with a <code>&lt;picture&gt;</code> element, and the title is placed as <code>&lt;figcaption&gt;</code> in order to keep a basic semantic structure.</p>
<p><strong>The following image code is:</strong></p>
<p><code>![Alt](https://bit.ly/3aJXGqo 'Photo by Mattia Astorino')</code></p>
<p><img src="https://bit.ly/3aJXGqo" alt="Alt" title="Photo by Mattia Astorino"></p>

    ]]>
      </content>
    </entry>
  
    
    <entry>
      <title>Native Elements</title>
      <link href="https://www.psytranslations.com//blog/native-elements/"/>
      <updated>2020-06-15T00:00:00Z</updated>
      <id>https://www.psytranslations.com//blog/native-elements/</id>
      <content type="html">
        <![CDATA[
      <p>Native Elements (NE) is not a CSS framework, no bundlers required or tons of configurations to set. You can consider it as a customizable plug-n-play library for your site which helps you easily style all the available HTML elements using CSS custom properties, classes, attributes, or whatever you want in less than <code>6 kB</code>. You can also build your class-based CSS framework on top of it.</p>
<blockquote>
  HTML elements with CSS superpowers.
  <cite>Native Elements</cite>
</blockquote>
<h2>Features</h2>
<p>This library is built using modern CSS feature and best practices, the compiled version supports only the latest two Chrome, Safari, Firefox, and Edge versions and this is possible thanks to <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener noreferrer">Browserslist</a></p>
<h3>Modern</h3>
<p><small>Built on top of <a href="https://postcss.org/" target="_blank" rel="noopener noreferrer">PostCSS</a> takes advantage of exciting new CSS features, like custom and logical properties. If you use it from source, you can define custom selectors and mixins to make styling even easier.</small></p>
<h3>Modular</h3>
<p><small>In the age of Flexbox, CSS grid, and other exciting layout features, there is less and less need for a bloated CSS framework. What you do need is a simple foundation on top of which to build your styles.</small></p>
<h3>Framework agnostic</h3>
<p><small>If you're using the compiled version, just drop it inside your application main style. It's just CSS, so it works with
<a href="https://reactjs.org" rel="noopener noreferrer" target="_blank">React</a>, <a href="https://vuejs.org/" rel="noopener noreferrer" target="_blank">Vue</a>, <a href="https://angular.io/" rel="noopener noreferrer" target="_blank">Angular</a> and <a href="https://svelte.dev/" rel="noopener noreferrer" target="_blank">Svelte.</a></small></p>
<h3>Easy theming</h3>
<p><small>With our <a href="https://app.native-elements.dev" rel="noopener" target="_blank">theme builder</a> tool you can create, tweak, and export your theme easily. In the future, we'll share new premade themes.</small></p>
<hr>
<h3>Other features</h3>
<ul>
<li>Classless base styling of semantic HTML elements</li>
<li>All packed inside a gzipped size of just <a href="https://bundlephobia.com/result?p=@native-elements/core" target="_blank" rel="noopener noreferrer">less than <code>6kb</code></a></li>
<li>Drop n Build - No compiling required</li>
<li>Flexibility — Create your UI components following the naming convention you like.</li>
</ul>
<p><a href="https://native-elements.dev" target="_blank" ne-button>Learn more</a></p>

    ]]>
      </content>
    </entry>
  
    
    <entry>
      <title>Karol chévere</title>
      <link href="https://www.psytranslations.com//blog/karol_chevere/"/>
      <updated>2021-03-28T00:00:00Z</updated>
      <id>https://www.psytranslations.com//blog/karol_chevere/</id>
      <content type="html">
        <![CDATA[
      <h3>Karol es chévere</h3>
<p>
pir
pirpir
pirpir
</p>
pirpir
pirpir
porpor
porpor

    ]]>
      </content>
    </entry>
  
</feed>
